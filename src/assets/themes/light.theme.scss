@use "sass:color";
@use "sass:map";
@import "themes.colors";

.html-light-theme {
  background-image: linear-gradient(to right bottom, map.get($light-theme, 'top'), map.get($light-theme, 'bottom'));
  background-repeat: no-repeat;
  background-attachment: fixed;
}

.light-theme {
  background-image: linear-gradient(to right bottom, map.get($light-theme, 'top'), map.get($light-theme, 'bottom'));
  background-repeat: no-repeat;
  background-attachment: fixed;
  color: map.get($light-theme, 'text');

  a {
    color: map.get($light-theme, 'text');
  }

  .button-container {
    img {
      filter: invert(100%);
    }

    p {
      color: map.get($light-theme, 'text');
    }

    background-color: transparent;
    border: 1px solid map.get($light-theme, 'text');
  }

  .secret {
    color: map.get($light-theme, 'clear');
  }

  .circle {
    background-image: linear-gradient(to right, map.get($light-theme, 'contrast'), color.adjust(map.get($light-theme, 'contrast'), $alpha: -0.5));
  }

  .link-circle {
    background-image: linear-gradient(to bottom, map.get($light-theme, 'contrast'),  color.adjust(map.get($light-theme, 'contrast'), $alpha: -0.5));
    box-shadow: rgb(0 0 0 / 25%) 0 0 20px 1px;

    a {
      img {
        filter: invert(100%);
      }
    }
  }

  .header-item {
    color: map.get($light-theme, 'clear');
  }

  .active {
    background-color: map.get($light-theme, 'contrast');
  }

  .menu {
    background-color: map.get($light-theme, 'contrast');
    color: map.get($light-theme, 'clear');

    .active {
      background-color: map.get($light-theme, 'clear');
      color: map.get($light-theme, 'contrast');
    }
  }

  .menu-open {
    background-image: linear-gradient(to right bottom, map.get($light-theme, 'contrast'), map.get($light-theme, 'bottom'));
    color: map.get($light-theme, 'clear');

    .active {
      background-color: map.get($light-theme, 'clear');
      color: map.get($light-theme, 'contrast');
    }
  }

  .tile {
    background-color: map.get($light-theme, 'tile');
    box-shadow: rgb(0 0 0 / 25%) 0 0 20px 1px;
  }

  ::-webkit-scrollbar-thumb {
    background-color: map.get($light-theme, 'contrast');

    &:hover {
      background-color: color.adjust(map.get($light-theme, 'contrast'), $lightness: -20%);
    }
  }

  .loader {
    border-color: map.get($light-theme, 'contrast');
  }

  .home-mountains {
    filter: invert(13%) sepia(8%) saturate(12%) hue-rotate(351deg) brightness(106%) contrast(83%);
  }

  .contact-modal {
    background-color: map.get($light-theme, 'contrast');
    color: map.get($light-theme, 'text');

    .form-group {
      input,textarea {
        color: map.get($light-theme, 'text');
        border-color: map.get($light-theme, 'text');

        &:focus {
          outline: color.adjust(map.get($light-theme, 'contrast'), $lightness: 10%) solid 1px;
        }
      }
    }

    button {
      background-color: map.get($light-theme, 'text');
      color: map.get($light-theme, 'contrast');

      &:hover {
        background-color: color.adjust(map.get($light-theme, 'text'), $lightness: -20%);
        color: map.get($light-theme, 'contrast');
      }

      &:disabled {
        background-color: color.adjust(map.get($light-theme, 'contrast'), $lightness: -10%);
        color: color.adjust(map.get($light-theme, 'text'), $lightness: -20%)
      }

      &:disabled &:hover {
        background-color: color.adjust(map.get($light-theme, 'contrast'), $lightness: -10%);
        color: color.adjust(map.get($light-theme, 'text'), $lightness: -20%)
      }
    }
  }
}
